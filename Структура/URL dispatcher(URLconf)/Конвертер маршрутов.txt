URL-конвертер - это механизм определения, подходит ли часть маршрута или нет самим URLconf. 
Приятный бонус: конвертер может менять тип параметра, а значит, в обработчик может прийти сразу нужный нам тип, а не строка.
(https://habr.com/ru/company/yandex_praktikum/blog/541068/)
---------------------------------------------------------------------------------------------------------------------------------
Стандартные URL-конвертеры
* str - соответствует любой непустой строке, за исключением разделителя пути, '/'. 
Это значение по умолчанию, если преобразователь не включен в выражение
* int - соответствует нулю или любому положительному целому числу.
* slug - соответствует любой строке заголовка, состоящей из букв или цифр ASCII, а также символов дефиса и подчеркивания. 
	Пример: build-your-1st-django-site
uuid - соответствует форматированному UUID. 
Чтобы предотвратить сопоставление нескольких URL-адресов с одной и той же страницей, необходимо использовать дефисы, а буквы должны быть строчными. 
	Пример: 075194d3-6885-417e-a8a8-
path - соответствует любой непустой строке, включая разделитель пути, '/'.
Это позволяет вам сопоставлять полный путь URL, а не сегмент пути URL, как в случае с str.
(https://django.fun/docs/django/ru/4.0/topics/http/urls/#path-converters)
---------------------------------------------------------------------------------------------------------------------------------
Есть возможность создавать собственные конвертеры
(https://django.fun/docs/django/ru/4.0/topics/http/urls/#registering-custom-path-converters)
Конвертеры создабтся с помощью классов
Требование к классу конвертра:
* Атрибут класса regex в виде строки.
* Метод to_python(self, value), который обрабатывает преобразование согласованной строки в тип, который должен быть передан в функцию просмотра.
* Метод to_url(self, value), который обрабатывает преобразование типа Python в строку, которая будет использоваться в URL-адресе.
Оба метода дожны вызывать исключение ValueError.
ValueError интерпретируется Django как несоответствие, и как следствие
reverse() вызовет NoReverseMatch, если не совпадет другой шаблон URL.
Соответственно не будет не обработанного исключения.

Регистируются созданные конвертеры с помощью функции register_converter() из django.urls
register_converter(<путь до созданного класа конвертера>, <имя конертера,которое будет использовать при обращении в URLconf>) 
