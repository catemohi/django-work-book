Псевдоним приложения - это своего рода его альтернативное имя. Оно можетпригодиться в случае, если в проекте используются несколько экземпляров одного
и того же приложения, которые манипулируют разными данными, связаны с разными путями и которые требуется как-то различать в программном коде. 
( Дронов В. А. - Django 3.0. Практика создания веб-сайтов на Python-БХВ-Петербург (2021) | 177стр. 8.6. Псевдоним приложения )
В официальной документации это обьяняется как пространства имен
В общем то сам аргумент называется пространствами имен
( https://django.fun/docs/django/ru/4.0/topics/http/urls/#reversing-namespaced-urls )
В общем то, используются он для повторного использования маршрутов. И соответсвенно разграничения области этих самых маршрутов
В книге Дронова, хороший пример:
urlpatterns = [
    path ('', include( 'bbоаrd.urls ' , namespace='default-bboard' )),
    path ('' bbоаrd/ ', include('bbоаrd.urls ' , namespace='other-bboard')),
<а href=" {% url ' defailt-bboard:index ' %}"> ... </а>
----
Как мы видем используетсяя расширения одним и тем же списком urlpatterns bboard.urls
Но за счет использования namespace, мы обьясняем Django какой путь должен быть востоновлен.
А именно bbоаrd/index, т.к namespace='other-bboard' ссылается именно на это расширение.
----
Единственное что не понятно должны ли namespace заканчиваться именем приложения, в данном примере bboard
Ни где эт оне прописано, но как будто используется по дефолту.
----
Но точно ПСЕВДОНИМЫ НЕ БУДУТ РАБОТАТЬ без установки имении приложения.
(https://ru.stackoverflow.com/questions/1089499/django-%D0%97%D0%B0%D1%87%D0%B5%D0%BC-%D0%BD%D1%83%D0%B6%D0%BD%D0%BE-include-namespace)